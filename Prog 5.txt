#include <stdio.h>
#include <string.h>
#include <ctype.h>

#define ALPHABET_SIZE 26

void encrypt(char *plaintext, char *key, char *ciphertext) {
int textLen = strlen(plaintext);
int keyLen = strlen(key);
for (int i = 0; i < textLen; i++) {
if (isalpha(plaintext[i])) {
char base = isupper(plaintext[i]) ? 'A' : 'a';
ciphertext[i] = ((plaintext[i] - base + tolower(key[i % keyLen]) - 'a') % ALPHABET_SIZE) + base;
} else {
ciphertext[i] = plaintext[i];
}
}
ciphertext[textLen] = '\0';
}

void decrypt(char *ciphertext, char *key, char *decrypted) {
int textLen = strlen(ciphertext);
int keyLen = strlen(key);
for (int i = 0; i < textLen; i++) {
if (isalpha(ciphertext[i])) {
char base = isupper(ciphertext[i]) ? 'A' : 'a';
decrypted[i] = ((ciphertext[i] - base - (tolower(key[i % keyLen]) - 'a') + ALPHABET_SIZE) % ALPHABET_SIZE) + base;
} else {
decrypted[i] = ciphertext[i];
}
}
decrypted[textLen] = '\0';
}

int main() {
char plaintext[] = "wearediscoveredsaveyourself";
char key[] = "deceptive";
char ciphertext[strlen(plaintext) + 1];
char decrypted[strlen(plaintext) + 1];

encrypt(plaintext, key, ciphertext);
printf("Encrypted text: %s\n", ciphertext);

decrypt(ciphertext, key, decrypted);
printf("Decrypted text: %s\n", decrypted);

return 0;
}
